{
  "version": 4,
  "terraform_version": "1.13.3",
  "serial": 51,
  "lineage": "cae64127-a27f-4eee-6602-afa46fee244f",
  "outputs": {
    "instance_public_ip": {
      "value": "13.233.134.146",
      "type": "string"
    },
    "public_ip": {
      "value": "13.233.134.146",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "dev_app",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-0dee22c13ea7a9a67",
            "arn": "arn:aws:ec2:ap-south-1:825988192111:instance/i-0d51f17411e9fb71c",
            "associate_public_ip_address": true,
            "availability_zone": "ap-south-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 1
              }
            ],
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "force_destroy": false,
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "",
            "id": "i-0d51f17411e9fb71c",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "t2.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "ubuntu",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_group_id": "",
            "placement_partition_number": 0,
            "primary_network_interface": [
              {
                "delete_on_termination": true,
                "network_interface_id": "eni-0c142d8aa15eb6700"
              }
            ],
            "primary_network_interface_id": "eni-0c142d8aa15eb6700",
            "private_dns": "ip-172-31-37-127.ap-south-1.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "172.31.37.127",
            "public_dns": "ec2-13-233-134-146.ap-south-1.compute.amazonaws.com",
            "public_ip": "13.233.134.146",
            "region": "ap-south-1",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 3000,
                "kms_key_id": "",
                "tags": {},
                "tags_all": {},
                "throughput": 125,
                "volume_id": "vol-0b7047673d5a096c7",
                "volume_size": 8,
                "volume_type": "gp3"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [
              "app-sg"
            ],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0f669df52db8df39b",
            "tags": {
              "Name": "DevOpsApp"
            },
            "tags_all": {
              "Name": "DevOpsApp"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\n\n# Exit on any error\nset -e\n\n# Log everything for debugging\nexec \u003e \u003e(tee /var/log/user-data.log) 2\u003e\u00261\necho \"Starting user data script execution at $(date)\"\n\n# Update system and install dependencies\necho \"Updating system packages...\"\nsudo apt update -y\nsudo apt install -y openjdk-21-jdk maven git curl\n\n# Verify installations\necho \"Verifying installations...\"\njava -version\nmvn -version\ngit --version\n\n# Create application directory\necho \"Setting up application directory...\"\ncd /home/ubuntu\nrm -rf app  # Clean up any existing installation\ngit clone https://github.com/Trainings-TechEazy/test-repo-for-devops.git app\ncd app\n\n# Patch controllers to return plain text instead of views\necho \"Patching Spring controllers...\"\nif [ -d \"src/main/java/com/example/hellomvc/controller\" ]; then\n    sed -i 's/@Controller/@RestController/g' src/main/java/com/example/hellomvc/controller/*.java\n    sed -i 's/(Model model)//g' src/main/java/com/example/hellomvc/controller/*.java\n    sed -i 's/, Model model//g' src/main/java/com/example/hellomvc/controller/*.java\n    echo \"Controllers patched successfully\"\nelse\n    echo \"Warning: Controller directory not found, skipping patching\"\nfi\n\n# Build project (skip tests for faster build)\necho \"Building Maven project...\"\nmvn clean package -DskipTests\n\n# Verify build was successful\nif [ ! -d \"target\" ] || [ -z \"$(ls target/*.jar 2\u003e/dev/null | grep -v 'original')\" ]; then\n    echo \"Error: Build failed - no JAR file found\"\n    exit 1\nfi\n\n# Find the built JAR dynamically\nJAR_FILE=$(ls target/*.jar | grep -v 'original' | head -n 1)\necho \"Found JAR file: $JAR_FILE\"\n\n# Create a systemd service for better process management\necho \"Creating systemd service...\"\nsudo tee /etc/systemd/system/springboot-app.service \u003e /dev/null \u003c\u003cEOF\n[Unit]\nDescription=Spring Boot Application\nAfter=network.target\n\n[Service]\nType=simple\nUser=ubuntu\nWorkingDirectory=/home/ubuntu/app\nExecStart=/usr/bin/java -jar $JAR_FILE\nRestart=always\nRestartSec=10\nStandardOutput=journal\nStandardError=journal\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Enable and start the service\nsudo systemctl daemon-reload\nsudo systemctl enable springboot-app.service\nsudo systemctl start springboot-app.service\n\n# Wait a moment and check if service is running\nsleep 10\nif sudo systemctl is-active --quiet springboot-app.service; then\n    echo \"Application started successfully\"\n    echo \"Service status:\"\n    sudo systemctl status springboot-app.service --no-pager\nelse\n    echo \"Warning: Service may not have started properly\"\n    sudo systemctl status springboot-app.service --no-pager\nfi\n\n# Create a simple health check endpoint verification\necho \"Waiting for application to be ready...\"\nfor i in {1..30}; do\n    if curl -f http://localhost:8080/actuator/health 2\u003e/dev/null || curl -f http://localhost:8080/ 2\u003e/dev/null; then\n        echo \"Application is responding on port 8080\"\n        break\n    fi\n    echo \"Waiting for application... (attempt $i/30)\"\n    sleep 10\ndone\n\necho \"User data script completed at $(date)\"",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0790712bb7e0e5a30"
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "identity": {
            "account_id": "825988192111",
            "id": "i-0d51f17411e9fb71c",
            "region": "ap-south-1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_security_group.app_sg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "app_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-south-1:825988192111:security-group/sg-0790712bb7e0e5a30",
            "description": "Allow SSH and HTTP",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0790712bb7e0e5a30",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 8080,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8080
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              }
            ],
            "name": "app-sg",
            "name_prefix": "",
            "owner_id": "825988192111",
            "region": "ap-south-1",
            "revoke_rules_on_delete": false,
            "tags": null,
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-00e16e4beb581ea6c"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "identity": {
            "account_id": "825988192111",
            "id": "sg-0790712bb7e0e5a30",
            "region": "ap-south-1"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    }
  ],
  "check_results": null
}
